/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MovieQueueUI.java
 *
 * Created on Oct 8, 2011, 11:19:08 PM
 */

package edu.csupomona.cs.cs241.proj1gui;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import edu.csupomona.cs.cs241.proj1.*;
import javax.swing.JList;
/**
 *
 * @author Satshabad
 */
public class GuiFrame extends javax.swing.JFrame {

    
    private DefaultListModel libraryListModel;
    private DefaultListModel waitingQueueListModel;
    private MovieSystemManager backEndManager;
    int kk = 0;

   /** Creates new form MovieQueueUI */
    public GuiFrame() throws IOException, ClassNotFoundException {
       backEndManager = new MovieSystemManager();
       initComponents();
       priorityMediumRadioButton.doClick();
       sortByTitleRadioButton.doClick();
       normalOrderRadioButton.setSelected(true);
    }
   

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      librarySortRadioGroup = new javax.swing.ButtonGroup();
      waitingQueueDisplayRadioGroup = new javax.swing.ButtonGroup();
      priorityButtonGroup = new javax.swing.ButtonGroup();
      jPanel1 = new javax.swing.JPanel();
      jPanel3 = new javax.swing.JPanel();
      jLabel1 = new javax.swing.JLabel();
      jPanel4 = new javax.swing.JPanel();
      sortByGenreRadioButton = new javax.swing.JRadioButton();
      sortByDirectorRadioButton = new javax.swing.JRadioButton();
      sortByActorRadioButton = new javax.swing.JRadioButton();
      sortByTitleRadioButton = new javax.swing.JRadioButton();
      jScrollPane1 = new javax.swing.JScrollPane();
      libraryList = new javax.swing.JList();
      jPanel5 = new javax.swing.JPanel();
      jLabel2 = new javax.swing.JLabel();
      jComboBox1 = new javax.swing.JComboBox();
      jTextField1 = new javax.swing.JTextField();
      jButton1 = new javax.swing.JButton();
      jScrollPane2 = new javax.swing.JScrollPane();
      jList2 = new javax.swing.JList();
      jLabel5 = new javax.swing.JLabel();
      priorityLowRadioButton = new javax.swing.JRadioButton();
      priorityMediumRadioButton = new javax.swing.JRadioButton();
      priorityHighRadioButton = new javax.swing.JRadioButton();
      jSeparator1 = new javax.swing.JSeparator();
      jPanel2 = new javax.swing.JPanel();
      jPanel6 = new javax.swing.JPanel();
      jLabel3 = new javax.swing.JLabel();
      jButton2 = new javax.swing.JButton();
      jButton3 = new javax.swing.JButton();
      jScrollPane3 = new javax.swing.JScrollPane();
      waitingQueueList = new javax.swing.JList();
      normalOrderRadioButton = new javax.swing.JRadioButton();
      prioirtyOrderRadioButton = new javax.swing.JRadioButton();
      jPanel7 = new javax.swing.JPanel();
      jLabel4 = new javax.swing.JLabel();
      jButton4 = new javax.swing.JButton();
      jScrollPane4 = new javax.swing.JScrollPane();
      jList4 = new javax.swing.JList();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

      jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 14));
      jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      jLabel1.setText("MovieLibrary");

      librarySortRadioGroup.add(sortByGenreRadioButton);
      sortByGenreRadioButton.setText("Sort by Genre");
      sortByGenreRadioButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
      sortByGenreRadioButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            sortByGenreRadioButtonActionPerformed(evt);
         }
      });

      librarySortRadioGroup.add(sortByDirectorRadioButton);
      sortByDirectorRadioButton.setText("Sort by Director");
      sortByDirectorRadioButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
      sortByDirectorRadioButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            sortByDirectorRadioButtonActionPerformed(evt);
         }
      });

      librarySortRadioGroup.add(sortByActorRadioButton);
      sortByActorRadioButton.setText("Sort by Main Actor");
      sortByActorRadioButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
      sortByActorRadioButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            sortByActorRadioButtonActionPerformed(evt);
         }
      });

      librarySortRadioGroup.add(sortByTitleRadioButton);
      sortByTitleRadioButton.setText("Sort by Title");
      sortByTitleRadioButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
      sortByTitleRadioButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            sortByTitleRadioButtonActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
      jPanel4.setLayout(jPanel4Layout);
      jPanel4Layout.setHorizontalGroup(
         jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel4Layout.createSequentialGroup()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(sortByActorRadioButton)
               .addComponent(sortByTitleRadioButton))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(sortByDirectorRadioButton)
               .addComponent(sortByGenreRadioButton))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      jPanel4Layout.setVerticalGroup(
         jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel4Layout.createSequentialGroup()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(sortByTitleRadioButton)
               .addComponent(sortByDirectorRadioButton))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(sortByActorRadioButton)
               .addComponent(sortByGenreRadioButton)))
      );

      libraryList.setCellRenderer(new CustomListRenderer());
      libraryListModel = new DefaultListModel();
      libraryList.setModel(libraryListModel);
      libraryList.addMouseListener(new java.awt.event.MouseAdapter() {
         public void mouseClicked(java.awt.event.MouseEvent evt) {
            libraryListMouseClicked(evt);
         }
      });
      jScrollPane1.setViewportView(libraryList);

      javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
      jPanel3.setLayout(jPanel3Layout);
      jPanel3Layout.setHorizontalGroup(
         jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
         .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
      );
      jPanel3Layout.setVerticalGroup(
         jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
      );

      jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 14));
      jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      jLabel2.setText("Search Library");

      jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Title", "Actor", "Director", "Genre" }));

      jButton1.setText("Search");

      jList2.setModel(new javax.swing.AbstractListModel() {
         String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
         public int getSize() { return strings.length; }
         public Object getElementAt(int i) { return strings[i]; }
      });
      jScrollPane2.setViewportView(jList2);

      jLabel5.setText("Add by Priority:");

      priorityButtonGroup.add(priorityLowRadioButton);
      priorityLowRadioButton.setText("LOW");
      priorityLowRadioButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            priorityLowRadioButtonActionPerformed(evt);
         }
      });

      priorityButtonGroup.add(priorityMediumRadioButton);
      priorityMediumRadioButton.setText("MEDIUM");
      priorityMediumRadioButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            priorityMediumRadioButtonActionPerformed(evt);
         }
      });

      priorityButtonGroup.add(priorityHighRadioButton);
      priorityHighRadioButton.setText("HIGH");

      javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
      jPanel5.setLayout(jPanel5Layout);
      jPanel5Layout.setHorizontalGroup(
         jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
         .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel5)
            .addGap(18, 18, 18)
            .addComponent(priorityLowRadioButton)
            .addGap(18, 18, 18)
            .addComponent(priorityMediumRadioButton)
            .addGap(18, 18, 18)
            .addComponent(priorityHighRadioButton)
            .addContainerGap(117, Short.MAX_VALUE))
         .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
         .addGroup(jPanel5Layout.createSequentialGroup()
            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
         .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
      );
      jPanel5Layout.setVerticalGroup(
         jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel5Layout.createSequentialGroup()
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabel5)
               .addComponent(priorityLowRadioButton)
               .addComponent(priorityMediumRadioButton)
               .addComponent(priorityHighRadioButton))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jButton1))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE))
      );

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      );

      jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 14));
      jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      jLabel3.setText("Your Queue");

      jButton2.setText("Deliver");

      jButton3.setText("Deliver by Priority");

      waitingQueueList.setCellRenderer(new CustomListRenderer());
      waitingQueueListModel = new DefaultListModel();
      waitingQueueList.setModel(waitingQueueListModel);
      jScrollPane3.setViewportView(waitingQueueList);

      waitingQueueDisplayRadioGroup.add(normalOrderRadioButton);
      normalOrderRadioButton.setText("Show in Normal Order");

      waitingQueueDisplayRadioGroup.add(prioirtyOrderRadioButton);
      prioirtyOrderRadioButton.setText("Show by Priority");

      javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
      jPanel6.setLayout(jPanel6Layout);
      jPanel6Layout.setHorizontalGroup(
         jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
               .addComponent(normalOrderRadioButton))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(prioirtyOrderRadioButton)
               .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
         .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
      );
      jPanel6Layout.setVerticalGroup(
         jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel6Layout.createSequentialGroup()
            .addComponent(jLabel3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jButton2)
               .addComponent(jButton3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(normalOrderRadioButton)
               .addComponent(prioirtyOrderRadioButton))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE))
      );

      jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14));
      jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      jLabel4.setText("Movies at Home");

      jButton4.setText("Send Home");
      jButton4.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
         }
      });

      jList4.setModel(new javax.swing.AbstractListModel() {
         String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
         public int getSize() { return strings.length; }
         public Object getElementAt(int i) { return strings[i]; }
      });
      jScrollPane4.setViewportView(jList4);

      javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
      jPanel7.setLayout(jPanel7Layout);
      jPanel7Layout.setHorizontalGroup(
         jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
         .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
         .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
      );
      jPanel7Layout.setVerticalGroup(
         jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel7Layout.createSequentialGroup()
            .addComponent(jLabel4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE))
      );

      javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
      jPanel2.setLayout(jPanel2Layout);
      jPanel2Layout.setHorizontalGroup(
         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel2Layout.createSequentialGroup()
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      jPanel2Layout.setVerticalGroup(
         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      );

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton4ActionPerformed
    {//GEN-HEADEREND:event_jButton4ActionPerformed
       // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void sortByTitleRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_sortByTitleRadioButtonActionPerformed
    {//GEN-HEADEREND:event_sortByTitleRadioButtonActionPerformed
         libraryListModel.clear();
         Movie[] movieList = backEndManager.getMoviesListedByTitle();
         for (int i = 0; i < movieList.length; i++)
       {
            libraryListModel.add(i, movieList[i]);
       }
    }//GEN-LAST:event_sortByTitleRadioButtonActionPerformed

    private void sortByDirectorRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_sortByDirectorRadioButtonActionPerformed
    {//GEN-HEADEREND:event_sortByDirectorRadioButtonActionPerformed
         libraryListModel.clear();
         Movie[] movieList = backEndManager.getMoviesListedByDirector();
         for (int i = 0; i < movieList.length; i++)
       {
            libraryListModel.add(i, movieList[i]);
       }
    }//GEN-LAST:event_sortByDirectorRadioButtonActionPerformed

    private void sortByActorRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_sortByActorRadioButtonActionPerformed
    {//GEN-HEADEREND:event_sortByActorRadioButtonActionPerformed
         libraryListModel.clear();
         Movie[] movieList = backEndManager.getMoviesListedByMainActor();
         for (int i = 0; i < movieList.length; i++)
       {
            libraryListModel.add(i, movieList[i]);
       }
    }//GEN-LAST:event_sortByActorRadioButtonActionPerformed

    private void sortByGenreRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_sortByGenreRadioButtonActionPerformed
    {//GEN-HEADEREND:event_sortByGenreRadioButtonActionPerformed
         libraryListModel.clear();
         Movie[] movieList = backEndManager.getMoviesListedByGenre();
         for (int i = 0; i < movieList.length; i++)
       {
            libraryListModel.add(i, movieList[i]);
       }
    }//GEN-LAST:event_sortByGenreRadioButtonActionPerformed

    private void libraryListMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_libraryListMouseClicked
    {//GEN-HEADEREND:event_libraryListMouseClicked
       JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2){
            int index = list.locationToIndex(evt.getPoint());
            Movie movieToBeAdded;
         if (sortByTitleRadioButton.isSelected() ){
            Movie[] moviesByTitle = backEndManager.getMoviesListedByTitle();
            movieToBeAdded = moviesByTitle[index];

            if(priorityLowRadioButton.isSelected()){
               backEndManager.addToMovieQueue(movieToBeAdded, 1);
               if (normalOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueue();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               else if (prioirtyOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueueByPriority();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
            }
            else if(priorityMediumRadioButton.isSelected()){
               backEndManager.addToMovieQueue(movieToBeAdded, 2);
               if (normalOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueue();

                  for (Movie movie : waitingQueueArray)
               {
                  System.err.println(movie);
               }
               for(int i = 0; i < waitingQueueArray.length; i++)
               {

                  waitingQueueListModel.add(i, waitingQueueArray[i]);

               }
               }
               else if (prioirtyOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueueByPriority();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
            }
             else if(priorityHighRadioButton.isSelected()){
               backEndManager.addToMovieQueue(movieToBeAdded, 3);
               if (normalOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueue();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               else if (prioirtyOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueueByPriority();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }

            }
            }
            else if(sortByActorRadioButton.isSelected())
            {
               Movie[] moviesByActor = backEndManager.getMoviesListedByMainActor();
               movieToBeAdded = moviesByActor[index];

               if(priorityLowRadioButton.isSelected()){
                  backEndManager.addToMovieQueue(movieToBeAdded, 1);
                  if (normalOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueue();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               else if (prioirtyOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueueByPriority();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               }
               else if(priorityMediumRadioButton.isSelected()){
                  backEndManager.addToMovieQueue(movieToBeAdded, 2);
                  if (normalOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueue();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               else if (prioirtyOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueueByPriority();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               }
               else if(priorityHighRadioButton.isSelected()){
                  backEndManager.addToMovieQueue(movieToBeAdded, 3);
                  if (normalOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueue();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               else if (prioirtyOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueueByPriority();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }

               }
            }
            else if(sortByDirectorRadioButton.isSelected())
            {
               Movie[] moviesByDirector = backEndManager.getMoviesListedByDirector();
               movieToBeAdded = moviesByDirector[index];

               if(priorityLowRadioButton.isSelected()){
                  backEndManager.addToMovieQueue(movieToBeAdded, 1);
                  if (normalOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueue();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               else if (prioirtyOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueueByPriority();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }

               }
               else if(priorityMediumRadioButton.isSelected()){
                  backEndManager.addToMovieQueue(movieToBeAdded, 2);
                   if (normalOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueue();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               else if (prioirtyOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueueByPriority();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               }
                else if(priorityHighRadioButton.isSelected()){
                  backEndManager.addToMovieQueue(movieToBeAdded, 3);
                  if (normalOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueue();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               else if (prioirtyOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueueByPriority();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               }
            }
            else if(sortByGenreRadioButton.isSelected())
            {
               Movie[] moviesByGenre = backEndManager.getMoviesListedByGenre();
               movieToBeAdded = moviesByGenre[index];

               if(priorityLowRadioButton.isSelected()){
                  backEndManager.addToMovieQueue(movieToBeAdded, 1);
                   if (normalOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueue();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               else if (prioirtyOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueueByPriority();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               }
               else if(priorityMediumRadioButton.isSelected()){
                  backEndManager.addToMovieQueue(movieToBeAdded, 2);
                   if (normalOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueue();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               else if (prioirtyOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueueByPriority();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               }
                else if(priorityHighRadioButton.isSelected()){
                  backEndManager.addToMovieQueue(movieToBeAdded, 3);
                   //This displays the data change
                  if (normalOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueue();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               else if (prioirtyOrderRadioButton.isSelected()){
                  //This displays the data change
                  waitingQueueListModel.clear();
                  Movie[] waitingQueueArray = backEndManager.getWaitingQueueByPriority();

                  for(int i = 0; i < waitingQueueArray.length; i++)
                  {
                     waitingQueueListModel.add(i, waitingQueueArray[i]);
                  }
               }
               }
            }


        }
        

    }//GEN-LAST:event_libraryListMouseClicked

    private void priorityLowRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_priorityLowRadioButtonActionPerformed
    {//GEN-HEADEREND:event_priorityLowRadioButtonActionPerformed
       // TODO add your handling code here:
    }//GEN-LAST:event_priorityLowRadioButtonActionPerformed

    private void priorityMediumRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_priorityMediumRadioButtonActionPerformed
    {//GEN-HEADEREND:event_priorityMediumRadioButtonActionPerformed
       // TODO add your handling code here:
    }//GEN-LAST:event_priorityMediumRadioButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            try
            {
               new GuiFrame().setVisible(true);
            }
            catch (IOException ex)
            {
               Logger.getLogger(GuiFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            catch (ClassNotFoundException ex)
            {
               Logger.getLogger(GuiFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
        });
    }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton jButton1;
   private javax.swing.JButton jButton2;
   private javax.swing.JButton jButton3;
   private javax.swing.JButton jButton4;
   private javax.swing.JComboBox jComboBox1;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JLabel jLabel5;
   private javax.swing.JList jList2;
   private javax.swing.JList jList4;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JPanel jPanel2;
   private javax.swing.JPanel jPanel3;
   private javax.swing.JPanel jPanel4;
   private javax.swing.JPanel jPanel5;
   private javax.swing.JPanel jPanel6;
   private javax.swing.JPanel jPanel7;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JScrollPane jScrollPane3;
   private javax.swing.JScrollPane jScrollPane4;
   private javax.swing.JSeparator jSeparator1;
   private javax.swing.JTextField jTextField1;
   private javax.swing.JList libraryList;
   private javax.swing.ButtonGroup librarySortRadioGroup;
   private javax.swing.JRadioButton normalOrderRadioButton;
   private javax.swing.JRadioButton prioirtyOrderRadioButton;
   private javax.swing.ButtonGroup priorityButtonGroup;
   private javax.swing.JRadioButton priorityHighRadioButton;
   private javax.swing.JRadioButton priorityLowRadioButton;
   private javax.swing.JRadioButton priorityMediumRadioButton;
   private javax.swing.JRadioButton sortByActorRadioButton;
   private javax.swing.JRadioButton sortByDirectorRadioButton;
   private javax.swing.JRadioButton sortByGenreRadioButton;
   private javax.swing.JRadioButton sortByTitleRadioButton;
   private javax.swing.ButtonGroup waitingQueueDisplayRadioGroup;
   private javax.swing.JList waitingQueueList;
   // End of variables declaration//GEN-END:variables

}
